// This file is part of LatNet Builder.
//
// Copyright (C) 2012-2018  Pierre L'Ecuyer and Universite de Montreal
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/** \page feats_figures_lat Figures of merit for rank-1 lattices

\section feats_figures_lat_ord Ordinary lattices

LatNetBuilder supports the following figures of merit for ordinary rank-1 lattices:

- The spectral figure of merit TODO cite, using a
  term-by-term evaluation with an \f$\ell_q\f$ norm:
  \f[
    \left(\sum_{\emptyset \neq \mathfrak u \subseteq \{1,\dots,s\}}
        \left[
            \gamma_{\mathfrak u}
            \bar{\mathcal L}_{\mathfrak u}(n, \boldsymbol a)
        \right]^q\right)^{1/q}
  \f] 
  where \f$s\f$ is the dimension,
  \f$n\f$ is the number of points,
  \f$\boldsymbol a\f$ is the generating vector (to be found),
  the constants \f$\gamma_{\mathfrak u}\f$ are generic weights,
  and \f$\bar{\mathcal L}_{\mathfrak u}(n, \boldsymbol a)\f$ is the normalized
  maximum distance between two successive parallel hyperplanes.

- The \f$\mathcal P_\alpha\f$ discrepancy \cite vSLO94a, \cite vHIC98a, \cite rNUY14a with \f$\alpha \in \{2, 4, 6, 8\}\f$, using a
  term-by-term evaluation with an \f$\ell_q\f$ norm:
    \f[
    \left(\sum_{\emptyset \neq \mathfrak u \subseteq \{1,\dots,s\}}
        \left[
            \gamma_{\mathfrak u}
            \mathcal{D}_{\mathfrak u}(n, \boldsymbol a)
        \right]^q\right)^{1/q}
    \f] 
  where \f$s\f$ is the dimension,
  \f$n\f$ is the number of points,
  \f$\boldsymbol a\f$ is the generating vector (to be found),
  the constants \f$\gamma_{\mathfrak u}\f$ are generic weights,
  and \f$\mathcal{D}_{\mathfrak u}(n, \boldsymbol a)\f$ is defined by:
    \f[
        \mathcal{D}^2_{\mathfrak u}(n, \boldsymbol a) = \frac{1}{n} \sum_{i = 0}^n 
        \prod_{j \in \mathfrak u} p_{\alpha}((i a_j / n) \mod 1),
    \f]
    where
    \f[
        p_{\alpha}(x) = \frac{- (-4 \pi^2)^{\alpha/2} B_{\alpha}(x)}{\alpha!}
    \f]
    with \f$B_{\alpha}\f$ the Bernouilli polynomial of even degree \f$\alpha\f$.

  If \f$ q = 2\f$, a coordinate-uniform evaluation algorithm can be used. This algorithm
  drastically reduces the computation time.

- The \f$\mathcal R_\alpha\f$ criterion \cite rNIE92b, \cite vHIC03b with \f$\alpha=1\f$ , using a
  term-by-term evaluation with an \f$\ell_q\f$ norm: 
    \f[
    \left(\sum_{\emptyset \neq \mathfrak u \subseteq \{1,\dots,s\}}
        \left[
            \gamma_{\mathfrak u}
            \mathcal{D}_{\mathfrak u}(n, \boldsymbol a)
        \right]^q\right)^{1/q}
    \f] 
  where \f$s\f$ is the dimension,
  \f$n\f$ is the number of points,
  \f$\boldsymbol a\f$ is the generating vector (to be found),
  the constants \f$\gamma_{\mathfrak u}\f$ are generic weights,
  and \f$\mathcal{D}_{\mathfrak u}(n, \boldsymbol a)\f$ is defined by:
    \f[
        \mathcal{D}^2_{\mathfrak u}(n, \boldsymbol a) = \frac{1}{n} \sum_{i = 0}^n 
        \prod_{j \in \mathfrak u} r_{\alpha, n}((i a_j / n) \mod 1),
    \f]
    where
    \f[
        r_{\alpha, n}(x) = \sum_{h = - \lfloor (n-1)/2 \rfloor }^{\lfloor n/2 \rfloor} \max(1,|h|)^{-\alpha} e^{2 \pi i h x} - 1.
    \f]

  If \f$ q = 2\f$, a coordinate-uniform evaluation algorithm can be used. This algorithm
  drastically reduces the computation time.



\section feats_figures_lat_poly Polynomial lattices

LatNetBuilder supports the following figures of merit for polynomial rank-1 lattices:

- The \f$\mathcal P_{\alpha}\f$ discrepancy \cite vLEM03a with \f$\alpha=2\f$ , using a
  term-by-term evaluation with an \f$\ell_q\f$ norm:
  \f[
    \left(\sum_{\emptyset \neq \mathfrak u \subseteq \{1,\dots,s\}}
        \left[
            \gamma_{\mathfrak u}
            \mathcal{D}_{\mathfrak u}(n, \boldsymbol a)
        \right]^q\right)^{1/q}
    \f] 
  where \f$s\f$ is the dimension,
  \f$n\f$ is the number of points,
  \f$\boldsymbol a\f$ is the generating vector (to be found),
  the constants \f$\gamma_{\mathfrak u}\f$ are generic weights,
  and \f$\mathcal{D}_{\mathfrak u}(n, \boldsymbol a)\f$ is defined by:
    \f[
        \mathcal{D}^2_{\mathfrak u}(n, \boldsymbol a) = \frac{1}{n} \sum_{i = 0}^n 
        \prod_{j \in \mathfrak u} \omega_{\alpha}(x_{i,j}),
    \f]
    where
    \f[
        \omega_{\alpha}(x) = \mu(\alpha) - 2^{(1+\lfloor \log_2(x) \rfloor) (\alpha - 1)}(\mu(\alpha) + 1),
    \f]
    where \f$ \mu(\alpha) = (1 - 2^{1- \alpha})^{-1} \f$ for even \f$ \alpha \f$.

  If \f$ q = 2\f$, a coordinate-uniform evaluation algorithm can be used. This algorithm
  drastically reduces the computation time.

  \todo check possible values for alpha

- The \f$\mathcal R\f$ criterion \cite rNIE03a, using
  term-by-term evaluation with an \f$\ell_q\f$ norm:
    \f[
    \left(\sum_{\emptyset \neq \mathfrak u \subseteq \{1,\dots,s\}}
        \left[
            \gamma_{\mathfrak u}
            \mathcal{D}_{\mathfrak u}(n, \boldsymbol a)
        \right]^q\right)^{1/q}
    \f] 
  where \f$s\f$ is the dimension,
  \f$n\f$ is the number of points,
  \f$\boldsymbol a\f$ is the generating vector (to be found),
  the constants \f$\gamma_{\mathfrak u}\f$ are generic weights,
  and \f$\mathcal{D}_{\mathfrak u}(n, \boldsymbol a)\f$ is defined by:
    \f[
        \mathcal{D}^2_{\mathfrak u}(n, \boldsymbol a) = \frac{1}{n} \sum_{i = 0}^n 
        \prod_{j \in \mathfrak u} \phi'_m(x_{i,j}),
    \f]
    where \f$m\f$ is the degree of the modulus and 
    \f[
        \phi'_m(x) = 
        \begin{cases}
        \frac{1}{2}i_0 & \textrm{ if } x = \sum_{i= i_0}^{\infty} \xi_i 2^{-i}, 1 \leq i_0 \leq m, \xi_{i_0} \neq 0 \\
        1 + \frac{1}{2}m & \textrm{otherwise.}
        \end{cases}
    \f]

  If \f$ q = 2\f$, a coordinate-uniform evaluation algorithm can be used. This algorithm
  drastically reduces the computation time.
*/
vim: ft=doxygen spelllang=en spell